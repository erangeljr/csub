

Terminals which are not used:

   ERROR


State 3 contains 2 reduce/reduce conflicts.
State 14 contains 2 reduce/reduce conflicts.
State 19 contains 2 reduce/reduce conflicts.

Grammar
rule 1    block -> LCURLY stmt_seq RCURLY
rule 2    block -> error
rule 3    stmt_seq -> stmt_seq stmt SEMI
rule 4    stmt_seq -> stmt SEMI
rule 5    stmt_seq -> error
rule 6    stmt -> expr
rule 7    stmt -> assignmnt
rule 8    stmt -> error
rule 9    expr -> expr PLUS term
rule 10   expr -> term
rule 11   expr -> error
rule 12   term -> number
rule 13   term -> IDENT
rule 14   assignmnt -> IDENT ASSIGN expr
rule 15   number -> INTEGER
rule 16   number -> REAL
rule 17   number -> error

Terminals, with rules where they appear

$ (-1)
error (256) 2 5 8 11 17
IDENT (258) 13 14
REAL (259) 16
INTEGER (260) 15
ASSIGN (261) 14
PLUS (262) 9
LCURLY (263) 1
RCURLY (264) 1
SEMI (265) 3 4
ERROR (266)

Nonterminals, with rules where they appear

block (12)
    on left: 1 2
stmt_seq (13)
    on left: 3 4 5, on right: 1 3
stmt (14)
    on left: 6 7 8, on right: 3 4
expr (15)
    on left: 9 10 11, on right: 6 9 14
term (16)
    on left: 12 13, on right: 9 10
assignmnt (17)
    on left: 14, on right: 7
number (18)
    on left: 15 16 17, on right: 12


state 0

    error	shift, and go to state 1
    LCURLY	shift, and go to state 2

    block	go to state 25



state 1

    block  ->  error .   (rule 2)

    $default	reduce using rule 2 (block)



state 2

    block  ->  LCURLY . stmt_seq RCURLY   (rule 1)

    error	shift, and go to state 3
    IDENT	shift, and go to state 4
    REAL	shift, and go to state 5
    INTEGER	shift, and go to state 6

    stmt_seq	go to state 7
    stmt	go to state 8
    expr	go to state 9
    term	go to state 10
    assignmnt	go to state 11
    number	go to state 12



state 3

    stmt_seq  ->  error .   (rule 5)
    stmt  ->  error .   (rule 8)
    expr  ->  error .   (rule 11)
    number  ->  error .   (rule 17)

    PLUS	reduce using rule 11 (expr)
    PLUS	[reduce using rule 17 (number)]
    SEMI	reduce using rule 8 (stmt)
    SEMI	[reduce using rule 11 (expr)]
    SEMI	[reduce using rule 17 (number)]
    $default	reduce using rule 5 (stmt_seq)



state 4

    term  ->  IDENT .   (rule 13)
    assignmnt  ->  IDENT . ASSIGN expr   (rule 14)

    ASSIGN	shift, and go to state 13

    $default	reduce using rule 13 (term)



state 5

    number  ->  REAL .   (rule 16)

    $default	reduce using rule 16 (number)



state 6

    number  ->  INTEGER .   (rule 15)

    $default	reduce using rule 15 (number)



state 7

    block  ->  LCURLY stmt_seq . RCURLY   (rule 1)
    stmt_seq  ->  stmt_seq . stmt SEMI   (rule 3)

    error	shift, and go to state 14
    IDENT	shift, and go to state 4
    REAL	shift, and go to state 5
    INTEGER	shift, and go to state 6
    RCURLY	shift, and go to state 15

    stmt	go to state 16
    expr	go to state 9
    term	go to state 10
    assignmnt	go to state 11
    number	go to state 12



state 8

    stmt_seq  ->  stmt . SEMI   (rule 4)

    SEMI	shift, and go to state 17



state 9

    stmt  ->  expr .   (rule 6)
    expr  ->  expr . PLUS term   (rule 9)

    PLUS	shift, and go to state 18

    $default	reduce using rule 6 (stmt)



state 10

    expr  ->  term .   (rule 10)

    $default	reduce using rule 10 (expr)



state 11

    stmt  ->  assignmnt .   (rule 7)

    $default	reduce using rule 7 (stmt)



state 12

    term  ->  number .   (rule 12)

    $default	reduce using rule 12 (term)



state 13

    assignmnt  ->  IDENT ASSIGN . expr   (rule 14)

    error	shift, and go to state 19
    IDENT	shift, and go to state 20
    REAL	shift, and go to state 5
    INTEGER	shift, and go to state 6

    expr	go to state 21
    term	go to state 10
    number	go to state 12



state 14

    stmt  ->  error .   (rule 8)
    expr  ->  error .   (rule 11)
    number  ->  error .   (rule 17)

    PLUS	reduce using rule 11 (expr)
    PLUS	[reduce using rule 17 (number)]
    SEMI	reduce using rule 8 (stmt)
    SEMI	[reduce using rule 11 (expr)]
    SEMI	[reduce using rule 17 (number)]
    $default	reduce using rule 8 (stmt)



state 15

    block  ->  LCURLY stmt_seq RCURLY .   (rule 1)

    $default	reduce using rule 1 (block)



state 16

    stmt_seq  ->  stmt_seq stmt . SEMI   (rule 3)

    SEMI	shift, and go to state 22



state 17

    stmt_seq  ->  stmt SEMI .   (rule 4)

    $default	reduce using rule 4 (stmt_seq)



state 18

    expr  ->  expr PLUS . term   (rule 9)

    error	shift, and go to state 23
    IDENT	shift, and go to state 20
    REAL	shift, and go to state 5
    INTEGER	shift, and go to state 6

    term	go to state 24
    number	go to state 12



state 19

    expr  ->  error .   (rule 11)
    number  ->  error .   (rule 17)

    PLUS	reduce using rule 11 (expr)
    PLUS	[reduce using rule 17 (number)]
    SEMI	reduce using rule 11 (expr)
    SEMI	[reduce using rule 17 (number)]
    $default	reduce using rule 11 (expr)



state 20

    term  ->  IDENT .   (rule 13)

    $default	reduce using rule 13 (term)



state 21

    expr  ->  expr . PLUS term   (rule 9)
    assignmnt  ->  IDENT ASSIGN expr .   (rule 14)

    PLUS	shift, and go to state 18

    $default	reduce using rule 14 (assignmnt)



state 22

    stmt_seq  ->  stmt_seq stmt SEMI .   (rule 3)

    $default	reduce using rule 3 (stmt_seq)



state 23

    number  ->  error .   (rule 17)

    $default	reduce using rule 17 (number)



state 24

    expr  ->  expr PLUS term .   (rule 9)

    $default	reduce using rule 9 (expr)



state 25

    $   	go to state 26



state 26

    $   	go to state 27



state 27

    $default	accept
