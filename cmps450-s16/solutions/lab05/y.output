

Terminals which are not used:

   LPAREN
   RPAREN
   ERROR


State 3 contains 2 reduce/reduce conflicts.
State 18 contains 2 reduce/reduce conflicts.
State 25 contains 2 reduce/reduce conflicts.

Grammar
rule 1    block -> LCURLY stmt_seq RCURLY
rule 2    block -> error
rule 3    stmt_seq -> stmt_seq stmt SEMI
rule 4    stmt_seq -> stmt SEMI
rule 5    stmt_seq -> error
rule 6    stmt -> expr
rule 7    stmt -> decl
rule 8    stmt -> assignmnt
rule 9    stmt -> error
rule 10   decl -> type IDENT
rule 11   decl -> type assignmnt
rule 12   type -> INT
rule 13   type -> FLOAT
rule 14   expr -> expr PLUS term
rule 15   expr -> term
rule 16   expr -> error
rule 17   term -> number
rule 18   term -> IDENT
rule 19   assignmnt -> IDENT ASSIGN expr
rule 20   number -> INTEGER
rule 21   number -> REAL
rule 22   number -> error

Terminals, with rules where they appear

$ (-1)
error (256) 2 5 9 16 22
INT (258) 12
FLOAT (259) 13
IDENT (260) 10 18 19
INTEGER (261) 20
REAL (262) 21
ASSIGN (263) 19
PLUS (264) 14
LCURLY (265) 1
RCURLY (266) 1
LPAREN (267)
RPAREN (268)
SEMI (269) 3 4
ERROR (270)

Nonterminals, with rules where they appear

block (16)
    on left: 1 2
stmt_seq (17)
    on left: 3 4 5, on right: 1 3
stmt (18)
    on left: 6 7 8 9, on right: 3 4
decl (19)
    on left: 10 11, on right: 7
type (20)
    on left: 12 13, on right: 10 11
expr (21)
    on left: 14 15 16, on right: 6 14 19
term (22)
    on left: 17 18, on right: 14 15
assignmnt (23)
    on left: 19, on right: 8 11
number (24)
    on left: 20 21 22, on right: 17


state 0

    error	shift, and go to state 1
    LCURLY	shift, and go to state 2

    block	go to state 31



state 1

    block  ->  error .   (rule 2)

    $default	reduce using rule 2 (block)



state 2

    block  ->  LCURLY . stmt_seq RCURLY   (rule 1)

    error	shift, and go to state 3
    INT 	shift, and go to state 4
    FLOAT	shift, and go to state 5
    IDENT	shift, and go to state 6
    INTEGER	shift, and go to state 7
    REAL	shift, and go to state 8

    stmt_seq	go to state 9
    stmt	go to state 10
    decl	go to state 11
    type	go to state 12
    expr	go to state 13
    term	go to state 14
    assignmnt	go to state 15
    number	go to state 16



state 3

    stmt_seq  ->  error .   (rule 5)
    stmt  ->  error .   (rule 9)
    expr  ->  error .   (rule 16)
    number  ->  error .   (rule 22)

    PLUS	reduce using rule 16 (expr)
    PLUS	[reduce using rule 22 (number)]
    SEMI	reduce using rule 9 (stmt)
    SEMI	[reduce using rule 16 (expr)]
    SEMI	[reduce using rule 22 (number)]
    $default	reduce using rule 5 (stmt_seq)



state 4

    type  ->  INT .   (rule 12)

    $default	reduce using rule 12 (type)



state 5

    type  ->  FLOAT .   (rule 13)

    $default	reduce using rule 13 (type)



state 6

    term  ->  IDENT .   (rule 18)
    assignmnt  ->  IDENT . ASSIGN expr   (rule 19)

    ASSIGN	shift, and go to state 17

    $default	reduce using rule 18 (term)



state 7

    number  ->  INTEGER .   (rule 20)

    $default	reduce using rule 20 (number)



state 8

    number  ->  REAL .   (rule 21)

    $default	reduce using rule 21 (number)



state 9

    block  ->  LCURLY stmt_seq . RCURLY   (rule 1)
    stmt_seq  ->  stmt_seq . stmt SEMI   (rule 3)

    error	shift, and go to state 18
    INT 	shift, and go to state 4
    FLOAT	shift, and go to state 5
    IDENT	shift, and go to state 6
    INTEGER	shift, and go to state 7
    REAL	shift, and go to state 8
    RCURLY	shift, and go to state 19

    stmt	go to state 20
    decl	go to state 11
    type	go to state 12
    expr	go to state 13
    term	go to state 14
    assignmnt	go to state 15
    number	go to state 16



state 10

    stmt_seq  ->  stmt . SEMI   (rule 4)

    SEMI	shift, and go to state 21



state 11

    stmt  ->  decl .   (rule 7)

    $default	reduce using rule 7 (stmt)



state 12

    decl  ->  type . IDENT   (rule 10)
    decl  ->  type . assignmnt   (rule 11)

    IDENT	shift, and go to state 22

    assignmnt	go to state 23



state 13

    stmt  ->  expr .   (rule 6)
    expr  ->  expr . PLUS term   (rule 14)

    PLUS	shift, and go to state 24

    $default	reduce using rule 6 (stmt)



state 14

    expr  ->  term .   (rule 15)

    $default	reduce using rule 15 (expr)



state 15

    stmt  ->  assignmnt .   (rule 8)

    $default	reduce using rule 8 (stmt)



state 16

    term  ->  number .   (rule 17)

    $default	reduce using rule 17 (term)



state 17

    assignmnt  ->  IDENT ASSIGN . expr   (rule 19)

    error	shift, and go to state 25
    IDENT	shift, and go to state 26
    INTEGER	shift, and go to state 7
    REAL	shift, and go to state 8

    expr	go to state 27
    term	go to state 14
    number	go to state 16



state 18

    stmt  ->  error .   (rule 9)
    expr  ->  error .   (rule 16)
    number  ->  error .   (rule 22)

    PLUS	reduce using rule 16 (expr)
    PLUS	[reduce using rule 22 (number)]
    SEMI	reduce using rule 9 (stmt)
    SEMI	[reduce using rule 16 (expr)]
    SEMI	[reduce using rule 22 (number)]
    $default	reduce using rule 9 (stmt)



state 19

    block  ->  LCURLY stmt_seq RCURLY .   (rule 1)

    $default	reduce using rule 1 (block)



state 20

    stmt_seq  ->  stmt_seq stmt . SEMI   (rule 3)

    SEMI	shift, and go to state 28



state 21

    stmt_seq  ->  stmt SEMI .   (rule 4)

    $default	reduce using rule 4 (stmt_seq)



state 22

    decl  ->  type IDENT .   (rule 10)
    assignmnt  ->  IDENT . ASSIGN expr   (rule 19)

    ASSIGN	shift, and go to state 17

    $default	reduce using rule 10 (decl)



state 23

    decl  ->  type assignmnt .   (rule 11)

    $default	reduce using rule 11 (decl)



state 24

    expr  ->  expr PLUS . term   (rule 14)

    error	shift, and go to state 29
    IDENT	shift, and go to state 26
    INTEGER	shift, and go to state 7
    REAL	shift, and go to state 8

    term	go to state 30
    number	go to state 16



state 25

    expr  ->  error .   (rule 16)
    number  ->  error .   (rule 22)

    PLUS	reduce using rule 16 (expr)
    PLUS	[reduce using rule 22 (number)]
    SEMI	reduce using rule 16 (expr)
    SEMI	[reduce using rule 22 (number)]
    $default	reduce using rule 16 (expr)



state 26

    term  ->  IDENT .   (rule 18)

    $default	reduce using rule 18 (term)



state 27

    expr  ->  expr . PLUS term   (rule 14)
    assignmnt  ->  IDENT ASSIGN expr .   (rule 19)

    PLUS	shift, and go to state 24

    $default	reduce using rule 19 (assignmnt)



state 28

    stmt_seq  ->  stmt_seq stmt SEMI .   (rule 3)

    $default	reduce using rule 3 (stmt_seq)



state 29

    number  ->  error .   (rule 22)

    $default	reduce using rule 22 (number)



state 30

    expr  ->  expr PLUS term .   (rule 14)

    $default	reduce using rule 14 (expr)



state 31

    $   	go to state 32



state 32

    $   	go to state 33



state 33

    $default	accept
