Starting parse
Entering state 0
Reading a token: Next token is 265 (LCURLY)
Shifting token 265 (LCURLY), Entering state 2
Reading a token: Next token is 259 (FLOAT)
Shifting token 259 (FLOAT), Entering state 5
Reducing via rule 13 (line 71), FLOAT  -> type
state stack now 0 2
Entering state 12
Reading a token: Next token is 260 (IDENT)
Shifting token 260 (IDENT), Entering state 22
Reading a token: Next token is 269 (SEMI)
Reducing via rule 10 (line 56), type IDENT  -> decl
state stack now 0 2
Entering state 11
Reducing via rule 7 (line 51), decl  -> stmt
state stack now 0 2
Entering state 10
Next token is 269 (SEMI)
Shifting token 269 (SEMI), Entering state 21
Reducing via rule 4 (line 46), stmt SEMI  -> stmt_seq
state stack now 0 2
Entering state 9
Reading a token: Next token is 258 (INT)
Shifting token 258 (INT), Entering state 4
Reducing via rule 12 (line 70), INT  -> type
state stack now 0 2 9
Entering state 12
Reading a token: Next token is 260 (IDENT)
Shifting token 260 (IDENT), Entering state 22
Reading a token: Next token is 269 (SEMI)
Reducing via rule 10 (line 56), type IDENT  -> decl
state stack now 0 2 9
Entering state 11
Reducing via rule 7 (line 51), decl  -> stmt
state stack now 0 2 9
Entering state 20
Next token is 269 (SEMI)
Shifting token 269 (SEMI), Entering state 28
Reducing via rule 3 (line 45), stmt_seq stmt SEMI  -> stmt_seq
state stack now 0 2
Entering state 9
Reading a token: Next token is 260 (IDENT)
Shifting token 260 (IDENT), Entering state 6
Reading a token: Next token is 263 (ASSIGN)
Shifting token 263 (ASSIGN), Entering state 17
Reading a token: Next token is 261 (INTEGER)
Shifting token 261 (INTEGER), Entering state 7
Reducing via rule 20 (line 100), INTEGER  -> number
state stack now 0 2 9 6 17
Entering state 16
Reducing via rule 17 (line 86), number  -> term
state stack now 0 2 9 6 17
Entering state 14
Reducing via rule 15 (line 81), term  -> expr
state stack now 0 2 9 6 17
Entering state 27
Reading a token: Next token is 264 (PLUS)
Shifting token 264 (PLUS), Entering state 24
Reading a token: Next token is 261 (INTEGER)
Shifting token 261 (INTEGER), Entering state 7
Reducing via rule 20 (line 100), INTEGER  -> number
state stack now 0 2 9 6 17 27 24
Entering state 16
Reducing via rule 17 (line 86), number  -> term
state stack now 0 2 9 6 17 27 24
Entering state 30
Reducing via rule 14 (line 74), expr PLUS term  -> expr
state stack now 0 2 9 6 17
Entering state 27
Reading a token: Next token is 269 (SEMI)
Reducing via rule 19 (line 90), IDENT ASSIGN expr  -> assignmnt
state stack now 0 2 9
Entering state 15
Reducing via rule 8 (line 52), assignmnt  -> stmt
state stack now 0 2 9
Entering state 20
Next token is 269 (SEMI)
Shifting token 269 (SEMI), Entering state 28
Reducing via rule 3 (line 45), stmt_seq stmt SEMI  -> stmt_seq
state stack now 0 2
Entering state 9
Reading a token: Next token is 259 (FLOAT)
Shifting token 259 (FLOAT), Entering state 5
Reducing via rule 13 (line 71), FLOAT  -> type
state stack now 0 2 9
Entering state 12
Reading a token: Next token is 260 (IDENT)
Shifting token 260 (IDENT), Entering state 22
Reading a token: Next token is 263 (ASSIGN)
Shifting token 263 (ASSIGN), Entering state 17
Reading a token: Next token is 262 (REAL)
Shifting token 262 (REAL), Entering state 8
Reducing via rule 21 (line 101), REAL  -> number
state stack now 0 2 9 12 22 17
Entering state 16
Reducing via rule 17 (line 86), number  -> term
state stack now 0 2 9 12 22 17
Entering state 14
Reducing via rule 15 (line 81), term  -> expr
state stack now 0 2 9 12 22 17
Entering state 27
Reading a token: Next token is 264 (PLUS)
Shifting token 264 (PLUS), Entering state 24
Reading a token: Next token is 262 (REAL)
Shifting token 262 (REAL), Entering state 8
Reducing via rule 21 (line 101), REAL  -> number
state stack now 0 2 9 12 22 17 27 24
Entering state 16
Reducing via rule 17 (line 86), number  -> term
state stack now 0 2 9 12 22 17 27 24
Entering state 30
Reducing via rule 14 (line 74), expr PLUS term  -> expr
state stack now 0 2 9 12 22 17
Entering state 27
Reading a token: Next token is 269 (SEMI)
Reducing via rule 19 (line 90), IDENT ASSIGN expr  -> assignmnt
state stack now 0 2 9 12
Entering state 23
Reducing via rule 11 (line 61), type assignmnt  -> decl
state stack now 0 2 9
Entering state 11
Reducing via rule 7 (line 51), decl  -> stmt
state stack now 0 2 9
Entering state 20
Next token is 269 (SEMI)
Shifting token 269 (SEMI), Entering state 28
Reducing via rule 3 (line 45), stmt_seq stmt SEMI  -> stmt_seq
state stack now 0 2
Entering state 9
Reading a token: Next token is 266 (RCURLY)
Shifting token 266 (RCURLY), Entering state 19
Reducing via rule 1 (line 41), LCURLY stmt_seq RCURLY  -> block
state stack now 0
Entering state 31
Reading a token: Now at end of input.
Shifting token 0 ($), Entering state 32
Now at end of input.
